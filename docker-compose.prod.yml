services:
  nginx:
      image: nginx
      restart: always
      # ports:
      #   - 9080:80  # 僅供本地除錯／測試用，NPM 請透過網路直連 port 80
      volumes:
        - "./nginx.conf:/etc/nginx/nginx.conf"
        # - "./letsencrypt:/etc/letsencrypt"
        - "./www:/var/www/html"
      depends_on:
        - api
        - front
      networks:
        - agent_network
        - npm-shared  # 給 NPM 轉送使用
      expose: 
        - 80

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-manager
    ports:
      - "80:80"
      - "81:81"    # 管理介面（Web UI）
      - "443:443"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    restart: unless-stopped
    networks:
      - agent_network

  api:
    build:
      context: ./sdl-backend-main
      dockerfile: Dockerfile.prod
    image: stone881129/sdl-api:latest
    restart: always
    expose:
      - 3000
    environment:
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_NAME=sdls_fullstack_postgres1
    volumes:
      - "./sdl-backend-main/daily_file:/sdl-backend-main/daily_file"
    networks:
      - agent_network
    depends_on:
      postgres:
        condition: service_healthy

  front:
    build:
      context: ./sdl-frontend-main
      dockerfile: Dockerfile.prod
    image: stone881129/sdl-front:latest
    restart: always
    expose:
      - 5173
    networks:
      - agent_network

  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - 5432
    networks:
      - agent_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  agent_network:
  npm-shared:
    name: npm-shared

volumes:
  postgres_data:
